{"ast":null,"code":"var _jsxFileName = \"C:\\\\USM\\\\2022-2\\\\ANAL\\\\inf236-2022-2-grupo-x\\\\Proyecto\\\\client\\\\src\\\\components\\\\GetMultiparametro.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetMultiparametro = () => {\n  _s();\n  const [sensor, setWS] = useState([]);\n  const [sensor2, setWD] = useState([]);\n  const [sensor3, setTemp] = useState([]);\n  const [sensor4, setRH] = useState([]);\n  const [sensor5, setBP] = useState([]);\n  const [sensor6, setDepth] = useState([]);\n  useEffect(() => {\n    async function obtenerDatos() {\n      const response = await fetch('/api/multi-parametro');\n      const data = await response.json();\n      setWS(data.WS);\n      setWD(data.WD);\n      setTemp(data.Temp);\n      setRH(data.RH);\n      setBP(data.BP);\n      setDepth(data.Depth);\n    }\n    obtenerDatos();\n  }, []);\n  const graphData = {\n    labels: sensor.map(data => data.ts),\n    datasets: [{\n      label: \"WS\",\n      data: sensor.map(data => data.value),\n      backgroundColor: \"#55b169\"\n    }, {\n      label: \"WD\",\n      data: sensor2.map(data => data.value),\n      backgroundColor: \"#cec845\"\n    }, {\n      label: \"Temp\",\n      data: sensor3.map(data => data.value),\n      backgroundColor: \"#ff8f02\"\n    }, {\n      label: \"RH\",\n      data: sensor4.map(data => data.value),\n      backgroundColor: \"#4f5ccb\"\n    }, {\n      label: \"BP\",\n      data: sensor5.map(data => data.value),\n      backgroundColor: \"#fe1fa2\"\n    }, {\n      label: \"Depth\",\n      data: sensor6.map(data => data.value),\n      backgroundColor: \"#F45B69\"\n    }]\n  };\n  const options = {\n    responsive: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(GetMultiparametro, \"Iww9yTgvrXhQo1t4sw3JMaoelro=\");\n_c = GetMultiparametro;\nexport default GetMultiparametro;\nvar _c;\n$RefreshReg$(_c, \"GetMultiparametro\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","Bar","GetMultiparametro","sensor","setWS","sensor2","setWD","sensor3","setTemp","sensor4","setRH","sensor5","setBP","sensor6","setDepth","obtenerDatos","response","fetch","data","json","WS","WD","Temp","RH","BP","Depth","graphData","labels","map","ts","datasets","label","value","backgroundColor","options","responsive"],"sources":["C:/USM/2022-2/ANAL/inf236-2022-2-grupo-x/Proyecto/client/src/components/GetMultiparametro.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst GetMultiparametro = () => {\r\n\r\n    const [sensor, setWS] = useState([]);\r\n    const [sensor2, setWD] = useState([]);\r\n    const [sensor3, setTemp] = useState([]);\r\n    const [sensor4, setRH] = useState([]);\r\n    const [sensor5, setBP] = useState([]);\r\n    const [sensor6, setDepth] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function obtenerDatos() {\r\n            const response = await fetch('/api/multi-parametro');\r\n            const data = await response.json();\r\n            setWS(data.WS);\r\n            setWD(data.WD);\r\n            setTemp(data.Temp);\r\n            setRH(data.RH);\r\n            setBP(data.BP);\r\n            setDepth(data.Depth);\r\n        }\r\n\r\n        obtenerDatos();\r\n    }, []);\r\n\r\n    const graphData = {\r\n        labels : sensor.map((data) => data.ts),\r\n        datasets: [\r\n            {\r\n                label: \"WS\",\r\n                data: sensor.map((data) => data.value),\r\n                backgroundColor: \"#55b169\",\r\n            },\r\n            {\r\n                label: \"WD\",\r\n                data: sensor2.map((data) => data.value),\r\n                backgroundColor: \"#cec845\",\r\n            },\r\n            {\r\n                label: \"Temp\",\r\n                data: sensor3.map((data) => data.value),\r\n                backgroundColor: \"#ff8f02\",\r\n            },\r\n            {\r\n                label: \"RH\",\r\n                data: sensor4.map((data) => data.value),\r\n                backgroundColor: \"#4f5ccb\",\r\n            },\r\n            {\r\n                label: \"BP\",\r\n                data: sensor5.map((data) => data.value),\r\n                backgroundColor: \"#fe1fa2\",\r\n            },\r\n            {\r\n                label: \"Depth\",\r\n                data: sensor6.map((data) => data.value),\r\n                backgroundColor: \"#F45B69\",\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        responsive: true\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Bar options={options} data={graphData} />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default GetMultiparametro;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}