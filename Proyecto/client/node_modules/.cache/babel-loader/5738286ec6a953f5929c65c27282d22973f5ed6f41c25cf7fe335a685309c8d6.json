{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n//import LineChart from './LineChart';\n\nconst GetRadon = () => {\n  _s();\n  const [sensor, setData] = useState([]);\n  useEffect(() => {\n    async function obtenerDatos() {\n      const response = await fetch('/api/radon');\n      const data = await response.json();\n      setData(data.Fecha);\n    }\n    obtenerDatos();\n  }, []);\n  console.log(sensor);\n  console.log(Array.isArray(sensor.Fecha));\n\n  /*\r\n  const [sensorplot, setSensorData] = useState({\r\n      labels: sensor.map((data) => data.ts),\r\n      datasets: [{\r\n          label: \"data sensor\",\r\n          data: sensor.Fecha.map((data) => data.value),\r\n      }]\r\n  })\r\n  */\n  /*\r\n      return(\r\n          <div>\r\n              {sensor.Fecha.map(datos => (\r\n                  <ul key={datos.ts}> {datos.value} </ul>\r\n              ))}\r\n          </div>\r\n      );\r\n      */\n};\n_s(GetRadon, \"TEV+a4k5ViFp/xF3/MgmpqUBpBo=\");\n_c = GetRadon;\nexport default GetRadon;\nvar _c;\n$RefreshReg$(_c, \"GetRadon\");","map":{"version":3,"names":["React","useEffect","useState","GetRadon","sensor","setData","obtenerDatos","response","fetch","data","json","Fecha","console","log","Array","isArray"],"sources":["C:/USM/2022-2/ANAL/inf236-2022-2-grupo-x/Proyecto/client/src/components/GetData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n//import LineChart from './LineChart';\r\n\r\n\r\nconst GetRadon = () => {\r\n\r\n    const [sensor, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function obtenerDatos() {\r\n            const response = await fetch('/api/radon');\r\n            const data = await response.json();\r\n            setData(data.Fecha);\r\n        }\r\n\r\n        obtenerDatos();\r\n    }, []);\r\n\r\n    console.log(sensor)\r\n    console.log(Array.isArray(sensor.Fecha))\r\n\r\n    /*\r\n    const [sensorplot, setSensorData] = useState({\r\n        labels: sensor.map((data) => data.ts),\r\n        datasets: [{\r\n            label: \"data sensor\",\r\n            data: sensor.Fecha.map((data) => data.value),\r\n        }]\r\n    })\r\n    */\r\n/*\r\n    return(\r\n        <div>\r\n            {sensor.Fecha.map(datos => (\r\n                <ul key={datos.ts}> {datos.value} </ul>\r\n            ))}\r\n        </div>\r\n    );\r\n    */\r\n}\r\n\r\nexport default GetRadon;\r\n  "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,eAAeK,YAAY,GAAG;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;MAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCL,OAAO,CAACI,IAAI,CAACE,KAAK,CAAC;IACvB;IAEAL,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAENM,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;EACnBQ,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAACX,MAAM,CAACO,KAAK,CAAC,CAAC;;EAExC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,GAnCKR,QAAQ;AAAA,KAARA,QAAQ;AAqCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}